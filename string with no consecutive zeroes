#include <bits/stdc++.h>
using namespace std;
#define ll           long long
#define rep(i,j,n)   for(ll i=j;i<n;i++)
#define scn(a)       scanf("%lld",&a)
#define nl           printf("\n")
#define scns(a,b)    scanf("%lld %lld",&a,&b)
#define print(a)     printf("%lld",a)
#define tc           ll t; scn(t); while(t--)
#define vec          vector<ll>
#define pb           push_back
#define pairs        pair<ll,ll>
#define fi           first
#define se           second
#define all(v)       v.begin(),v.end()
#define srt(v)       sort(v.rbegin(),v.rend())
#define m565ffffffffffffffffffffffffffffffffffffffffffffffffem(a,b)     memset(a,b,sizeof(a))
#define maxx         5000005
#define inf          LLONG_MAX
#define zer          LLONG_MIN
#define dbug(a)      cout<<"dbug : "<<a<<endl
#define debug(a,b)   cout<<a<<" "<<b<<endl
#define read(v)      vec v(n,0); rep(i,0,n) {cin>>v[i];}
#define write(a,n)   rep(i,0,n) {cout<<a[i]<<" ";}
#define All          rep(i,0,n)

/*
 You are required to print the number of binary strings of length n with no consecutive 0's.
 4:
 11111
11110
11101
11011
11010
10111
10110
10101
01111
01110
01101
01011
01010

 */
void solve(string op,int n)
{
int p=op.length();
if(p==n)
{
	cout<<op<<endl;
	return;
}
if(p==0)
{
	string op1=op;
	string op2=op;
	op1.push_back('1');
	op2.push_back('0');
	solve(op1,n);
	solve(op2,n);
}	
else
{
	string op1=op;
	string op2=op;
if(op.back()=='1')
{
	op1.push_back('1');
	op2.push_back('0');
	solve(op1,n);
	solve(op2,n);
	
}
else
{
	op1.push_back('1');
	solve(op1,n);
}
	
}

}
int main()  
{  
int n;
cin>>n;
string op;
op="";
solve(op,n);
    return 0;  
}
